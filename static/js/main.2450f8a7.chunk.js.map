{"version":3,"sources":["components/Title.js","config/config.js","components/Chart.js","components/Deposits.js","components/Orders.js","components/includes/footer.js","components/location.js","components/CountryTimeline.js","components/countryDetail.js","components/historicalNew.js","components/coronaVirus.js","App.js","serviceWorker.js","index.js","components/corona.png"],"names":["Title","props","Typography","component","variant","color","gutterBottom","children","API","Chart","useTheme","useState","loading","setLoading","detail","setDetail","useEffect","fetch","then","response","json","data","map","d","reportDateString","moment","format","CircularProgress","Fragment","margin","top","right","bottom","left","strokeDasharray","dataKey","angle","textAnchor","tick","fontSize","tickCount","type","stackId","stroke","fill","useStyles","makeStyles","depositContext","flex","Deposits","classes","style","fontWeight","cases","recovered","deaths","className","updated","theme","seeMore","marginTop","spacing","Orders","title","columns","field","render","rowData","src","countryInfo","flag","alt","width","borderRadius","cellStyle","pageSize","options","rowsPerPage","search","headerStyle","backgroundColor","root","formControl","minWidth","selectEmpty","container","maxHeight","CountryTimeline","console","log","timeline","Object","keys","forEach","key","push","date","length","tickSize","corona","marginBottom","CountryDetail","TableContainer","Table","stickyHeader","size","aria-label","TableHead","TableRow","TableCell","align","TableBody","reverse","index","colSpan","fetcher","HistoricalNew","countryTotal","setCountryTotal","total","setTotal","historical","setHistorical","historicalData","setHistoricalData","latitude","longitude","height","zoom","viewport","setViewport","url","useSwr","error","countries","points","country","properties","cluster","province","updatedAt","stats","geometry","coordinates","parseFloat","mapRef","useRef","bounds","current","getMap","getBounds","toArray","flat","useSupercluster","radius","maxZoom","clusters","supercluster","Grid","item","xs","md","lg","textAlign","Divider","confirmed","minHeight","mapboxApiAccessToken","onViewportChange","newViewport","ref","isCluster","pointCount","point_count","id","onClick","expansionZoom","Math","min","getClusterExpansionZoom","transitionInterpolator","FlyToInterpolator","speed","transitionDuration","cursor","filterResult","filter","toLowerCase","filterCountry","markerClick","Paper","palette","background","paper","CoronaVirus","href","Copyright","Date","getFullYear","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","flexGrow","appBarSpacer","mixins","toolbar","content","overflow","paddingTop","paddingBottom","padding","flexDirection","fixedHeight","chartHeight","historicalHeight","a11yProps","TabPanel","value","Container","maxWidth","Boolean","window","location","hostname","match","ReactDOM","React","setValue","fixedHeightPaper","clsx","CssBaseline","AppBar","position","Toolbar","IconButton","edge","menuButton","Tabs","onChange","event","newValue","Tab","label","Box","pt","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.2450f8a7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","export const API = {\n  total: \"https://corona.lmao.ninja/v2/all\",\n  confirmed: \"https://covid19.mathdro.id/api/confirmed\",\n  recovered: \"https://covid19.mathdro.id/api/recovered\",\n  deaths: \"https://covid19.mathdro.id/api/deaths\",\n  dailySummary: \"https://covid19.mathdro.id/api/daily\",\n  dailyTimeSeries: {\n    pattern: \"https://covid19.mathdro.id/api/daily/[dateString]\",\n    example: \"https://covid19.mathdro.id/api/daily/2-14-2020\"\n  },\n  image: \"https://covid19.mathdro.id/api/og\",\n  source: \"https://github.com/mathdroid/covid19\",\n  countries: \"https://corona.lmao.ninja/v2/countries\",\n  countryDetail: {\n    pattern: \"https://covid19.mathdro.id/api/countries/[country]\",\n    example: \"https://covid19.mathdro.id/api/countries/USA\"\n  },\n  historical: \"https://corona.lmao.ninja/v2/historical\",\n  map: \"https://corona.lmao.ninja/v2/jhucsse\",\n  lastUpdate: \"2020-03-20T14:43:04.000Z\"\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer\n} from \"recharts\";\nimport Title from \"./Title\";\nimport { API } from \"../config/config\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport moment from \"moment\";\n\nexport default function Chart() {\n  const theme = useTheme();\n  const [loading, setLoading] = useState(true);\n  const [detail, setDetail] = useState([]);\n\n  useEffect(() => {\n    if (loading) {\n      fetch(API.dailySummary)\n        .then(response => response.json())\n        .then(data => {\n          data.map(d => d.reportDateString = moment(d.reportDateString).format('DD-MMM-YYYY'));\n          setDetail(data);\n          setLoading(false);\n        });\n    }\n  }, [loading]);\n  return (\n    <>\n      {loading && <CircularProgress />}\n      {detail && (\n        <React.Fragment>\n          <Title>Corona Journey Day By Day</Title>\n          <ResponsiveContainer>\n            <AreaChart\n              data={detail}\n              margin={{\n                top: 16,\n                right: 16,\n                bottom: 35,\n                left: 24\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"reportDateString\" angle={-43} textAnchor=\"end\" tick={{ fontSize: 10 }} tickCount={20}/>\n              <YAxis />\n              <Tooltip />\n              <Area\n                type=\"monotone\"\n                dataKey=\"deaths.total\"\n                stackId=\"1\"\n                stroke=\"#f44336\"\n                fill=\"#f44336\"\n\n              />\n              <Area\n                type=\"monotone\"\n                dataKey=\"recovered.total\"\n                stackId=\"1\"\n                stroke=\"#82ca9d\"\n                fill=\"#82ca9d\"\n              />\n               <Area\n                type=\"monotone\"\n                dataKey=\"totalConfirmed\"\n                stackId=\"1\"\n                stroke=\"#ffc658\"\n                fill=\"#ffc658\"\n              />\n            </AreaChart>\n          </ResponsiveContainer>\n        </React.Fragment>\n      )}\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n// import Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { API } from \"../config/config\";\nimport Moment from \"react-moment\";\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1\n  }\n});\n\nexport default function Deposits() {\n  const [loading, setLoading] = useState(true);\n  const [detail, setDetail] = useState(null);\n\n  useEffect(() => {\n    if (loading) {\n      fetch(API.total)\n        .then(response => response.json())\n        .then(data => {\n          setDetail(data);\n          setLoading(false);\n        });\n    }\n  }, [loading]);\n  const classes = useStyles();\n  return (\n    <>\n      {loading && <CircularProgress />}\n      {detail && (\n        <React.Fragment>\n          <Typography variant=\"h4\" style={{color: \"orange\"}} component=\"h4\">\n            Confirmed\n          </Typography>\n          <Typography component=\"h3\" style={{color: \"orange\", fontWeight:\"bold\"}} variant=\"h2\">\n            {detail.cases}\n          </Typography>\n          <hr/>\n          <Typography variant=\"h4\" style={{color: \"green\"}} component=\"h4\">\n            Recovered\n          </Typography>\n          <Typography component=\"p\" style={{color: \"green\", fontWeight:\"bold\"}} variant=\"h2\">\n            {detail.recovered}\n          </Typography>\n          <hr/>\n          <Typography variant=\"h4\" color=\"error\"  component=\"h4\">\n            Deaths\n          </Typography>\n          <Typography component=\"p\"  color=\"error\"  style={{fontWeight:\"bold\"}}  variant=\"h2\">\n            {detail.deaths}\n          </Typography>\n          <hr/>\n          <Typography color=\"textSecondary\" variant=\"h6\"  className={classes.depositContext}>\n            Till <Moment format=\"DD-MMM-YYYY\">{detail.updated}</Moment> \n          </Typography>\n          <div></div>\n        </React.Fragment>\n      )}\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Title from \"./Title\";\nimport { API } from \"../config/config\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport MaterialTable from \"material-table\";\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Orders() {\n  const [loading, setLoading] = useState(true);\n  const [detail, setDetail] = useState(null);\n\n  useEffect(() => {\n    if (loading) {\n      fetch(API.countries)\n        .then((response) => response.json())\n        .then((data) => {\n          setDetail(data);\n          setLoading(false);\n        });\n    }\n  }, [loading]);\n  const classes = useStyles();\n  return (\n    <>\n      {loading && <CircularProgress />}\n      {detail && (\n        <React.Fragment>\n          <MaterialTable\n            title=\"Corona Status \"\n            columns={[\n              {\n                title: \"\",\n                field: \"countryInfo.flag\",\n                render: (rowData) => (\n                  <img\n                    src={rowData.countryInfo.flag}\n                    alt={rowData.countryInfo.flag}\n                    style={{ width: 50, borderRadius: \"50%\" }}\n                  />\n                ),\n              },\n              { title: \"Country\", field: \"country\" },\n              { title: \"Cases\", field: \"cases\" },\n              { title: \"TodayCases\", field: \"todayCases\" },\n              {\n                title: \"Deaths\",\n                field: \"deaths\",\n                cellStyle: {\n                  color: \"red\",\n                },\n              },\n              {\n                title: \"Recovered\",\n                field: \"recovered\",\n                cellStyle: {\n                  color: \"green\",\n                },\n              },\n              { title: \"Active\", field: \"active\" },\n              {\n                title: \"Critical\",\n                field: \"critical\",\n                cellStyle: {\n                  color: \"orange\",\n                },\n              },\n              { title: \"Tests\", field: \"tests\" },\n              // { title: \"CasesPerOneMillion\", field: \"casesPerOneMillion\" }\n            ]}\n            data={detail}\n            pageSize={10}\n            options={{\n              rowsPerPage: 10,\n              search: true,\n              headerStyle: {\n                backgroundColor: \"#3f51b5\",\n                color: \"#FFF\",\n              },\n            }}\n          ></MaterialTable>\n        </React.Fragment>\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 500,\n  },\n});\n\nexport default function Footer() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  return (\n    <BottomNavigation\n      value={value}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n      }}\n      showLabels\n      className={classes.root}\n    >\n      <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\n      <BottomNavigationAction label=\"Favorites\" icon={<FavoriteIcon />} />\n      <BottomNavigationAction label=\"Location\" icon={<LocationOnIcon />} />\n    </BottomNavigation>\n  );\n}","import React, { useEffect, useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport { API } from \"../config/config\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nexport default function Location() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [loading, setLoading] = useState(true);\n  const [detail, setDetail] = useState([]);\n\n  useEffect(() => {\n    if (loading) {\n      fetch(API.historical)\n        .then(response => response.json())\n        .then(data => {\n          setDetail(data);\n          setLoading(false);\n        });\n    }\n  }, [loading]);\n  const [state, setState] = React.useState({\n    age: \"\",\n    name: \"hai\"\n  });\n\n  const handleChange = name => event => {\n    setState({\n      ...state,\n      [name]: event.target.value\n    });\n  };\n\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"age-native-simple\">Locations</InputLabel>\n        <Select\n          native\n          value={state.age}\n          onChange={handleChange(\"age\")}\n          inputProps={{\n            name: \"age\",\n            id: \"age-native-simple\"\n          }}\n        >\n          {detail &&\n            detail.map((data, index) => {\n              return index && <option value={index}>{data.country} {data.province || ''}</option>;\n            })}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer\n} from \"recharts\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport moment from \"moment\";\nimport corona from \"./corona.png\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  },\n  container: {\n    maxHeight: 400\n  }\n});\nexport default function CountryTimeline(props) {\n  const { detail } = { ...props };\n  const classes = useStyles();\n  let data = [];\n  console.log(detail);\n  if (detail && detail.timeline) {\n    Object.keys(detail.timeline.cases).forEach(key => {\n      data.push({\n        date: moment(key).format(\"DD-MMM-YY\"),\n        cases: +detail.timeline.cases[key],\n        deaths: +detail.timeline.deaths[key],\n        // recovered: +detail.timeline.recovered[key]\n      });\n    });\n  }\n  return (\n    <>\n      {data.length !== 0 && (\n        <ResponsiveContainer>\n          <LineChart\n            data={data}\n            margin={{\n              top: 16,\n              right: 16,\n              bottom: 35,\n              left: 24\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"date\" angle={-45} textAnchor=\"end\" tickSize={1} />\n            <YAxis />\n            <Tooltip />\n            <Line\n              type=\"monotone\"\n              dataKey=\"deaths\"\n              stackId=\"1\"\n              stroke=\"#f44336\"\n              fill=\"#f44336\"\n            />\n            {/* <Line\n              type=\"monotone\"\n              dataKey=\"recovered\"\n              stackId=\"1\"\n              stroke=\"#82ca9d\"\n              fill=\"#82ca9d\"\n            /> */}\n            <Line\n              type=\"monotone\"\n              dataKey=\"cases\"\n              stackId=\"1\"\n              stroke=\"#ffc658\"\n              fill=\"#ffc658\"\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      )}\n      {!data.length && (\n        <span style={{ fontSize: \"large\", color: \"orange\" }}>\n          Click on any\n          <img\n            src={corona}\n            alt=\":( Go corona Go :(\"\n            style={{ width: \"46px\", marginBottom: \"-11px\" }}\n          />{\" \"}\n          icon in map to get country data\n        </span>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { TableContainer } from \"@material-ui/core\";\nimport Moment from \"react-moment\";\nimport Title from \"./Title\";\nimport corona from \"./corona.png\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  },\n  container: {\n    maxHeight: 250\n  }\n});\n\nexport default function CountryDetail(props) {\n  const { detail } = { ...props };\n  const classes = useStyles();\n  return (\n    <>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader size=\"small\" aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"left\">Date</TableCell>\n              <TableCell align=\"left\">Cases</TableCell>\n              <TableCell align=\"left\">Deaths</TableCell>\n              {/* <TableCell align=\"left\">Recovered</TableCell> */}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {detail &&\n              detail.timeline &&\n              Object.keys(detail.timeline.cases)\n                .reverse()\n                .map((key, index) => {\n                  return (\n                    <TableRow key={index}>\n                      <TableCell style={{ width: 150 }}>\n                        <Moment format=\"DD MMM YYYY\">{key}</Moment>\n                      </TableCell>\n                      <TableCell style={{ fontSize: \"large\", color: \"orange\" }}>\n                        {detail.timeline.cases[key]}\n                      </TableCell>\n                      <TableCell style={{ fontSize: \"large\", color: \"red\" }}>\n                        {detail.timeline.deaths[key]}\n                      </TableCell>\n                      {/* <TableCell style={{ fontSize: \"large\", color: \"green\" }}>\n                        {detail.timeline.recovered[key]}\n                      </TableCell> */}\n                    </TableRow>\n                  );\n                })}\n            {!(detail && detail.timeline) && (\n              <TableRow>\n                <TableCell style={{ fontSize: \"large\", color: \"orange\" }} colSpan=\"4\">\n                  <span>\n                    Click on any\n                    <img\n                      src={corona}\n                      alt=\":( Go corona Go :(\"\n                      style={{ width: \"46px\", marginBottom: \"-11px\" }}\n                    /> icon in map\n                    to get country data\n                  </span>\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","import React, { useRef, useState, useEffect } from \"react\";\nimport ReactMapGL, { Marker, FlyToInterpolator } from \"react-map-gl\";\nimport useSwr from \"swr\";\nimport { API } from \"../config/config\";\nimport useSupercluster from \"use-supercluster\";\nimport {\n  Grid,\n  Paper,\n  makeStyles,\n  Divider,\n  Typography,\n  Chip,\n  CircularProgress\n} from \"@material-ui/core\";\nimport CountryTimeline from \"./CountryTimeline\";\nimport CountryDetail from \"./countryDetail\";\nimport \"./history.css\";\nimport corona from \"./corona.png\";\nimport Title from \"./Title\";\n\nconst fetcher = (...args) => fetch(...args).then(response => response.json());\n\nexport default function HistoricalNew() {\n  const [loading, setLoading] = useState(true);\n  const [countryTotal, setCountryTotal] = useState(null);\n  const [total, setTotal] = useState({\n    cases: \"\",\n    deaths: \"\",\n    recovered: \"\"\n  });\n  const [historical, setHistorical] = useState([]);\n  const [historicalData, setHistoricalData] = useState([null]);\n  const [viewport, setViewport] = useState({\n    latitude: 21,\n    longitude: 78,\n    width: \"100%\",\n    height: \"100%\",\n    zoom: 3\n  });\n  const url = API.map;\n  const { data, error } = useSwr(url, { fetcher });\n  const countries = data && !error ? data : [];\n  const points = countries.map(country => ({\n    type: \"Feature\",\n    properties: {\n      cluster: false,\n      province: country.province,\n      country: country.country,\n      updatedAt: country.updatedAt,\n      stats: country.stats\n    },\n    geometry: {\n      type: \"Point\",\n      coordinates: [\n        parseFloat(country.coordinates.longitude),\n        parseFloat(country.coordinates.latitude)\n      ]\n    }\n  }));\n  const mapRef = useRef();\n  useEffect(() => {\n    if (loading) {\n      fetch(API.historical)\n        .then(response => response.json())\n        .then(historical => {\n          setHistorical(historical);\n          setLoading(false);\n        });\n\n      fetch(API.total)\n        .then(response => response.json())\n        .then(data => {\n          setTotal(data);\n        });\n    }\n  }, [loading]);\n\n  const markerClick = country => {\n    console.log(country);\n    console.log(historical);\n    const filterResult = historical.filter(\n      response =>\n        response.country.toLowerCase() === country.country.toLowerCase() && (response.province === null || response.province.toLowerCase()  === country.province.toLowerCase())\n    );\n    const filterCountry = countries.filter(\n      response =>\n      response.country.toLowerCase() === country.country.toLowerCase() && (response.province === null || response.province.toLowerCase()  === country.province.toLowerCase())\n    );\n    setCountryTotal(filterCountry.length ? filterCountry[0] : null);\n    setHistoricalData(filterResult.length ? filterResult[0] : null);\n  };\n\n  const bounds = mapRef.current\n    ? mapRef.current\n        .getMap()\n        .getBounds()\n        .toArray()\n        .flat()\n    : null;\n\n  const { clusters, supercluster } = useSupercluster({\n    points,\n    bounds,\n    zoom: viewport.zoom,\n    options: { radius: 75, maxZoom: 20 }\n  });\n\n  return (\n    <>\n      {loading && <CircularProgress />}\n      {!loading && (\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={12} lg={12}>\n            <h1 style={{ fontSize: \"30px\", textAlign: \"center\", color: '#b51f1f' }}>\n              <span>\n                <img\n                  src={corona}\n                  alt=\":( Go corona Go :(\"\n                  style={{ width: \"46px\", marginBottom: '-11px' }}\n                />\n              </span>\n              {historicalData && historicalData.country && (\n                <span>\n                  Corona Day By Day in {historicalData.country}{\" \"}\n                  {historicalData.province || \"\"}\n                </span>\n              )}\n              {!(historicalData && historicalData.country) && (\n                <span>Corona All Over World</span> \n              )}\n            </h1>\n            <Divider />\n            <Grid container spacing={1}>\n              <Grid item xs={12} md={4} lg={4}>\n                <span\n                  style={{\n                    color: \"orange\",\n                    fontWeight: \"bold\",\n                    fontSize: \"30px\"\n                  }}\n                >\n                  {\" \"}\n                  Cases:{\" \"}\n                  {countryTotal && countryTotal.stats\n                    ? countryTotal.stats.confirmed\n                    : total.cases}\n                </span>\n              </Grid>\n              <Grid item xs={12} md={4} lg={4}>\n                <span\n                  style={{\n                    color: \"green\",\n                    fontWeight: \"bold\",\n                    fontSize: \"30px\"\n                  }}\n                >\n                  {\" \"}\n                  Recovered:{\" \"}\n                  {countryTotal && countryTotal.stats\n                    ? countryTotal.stats.recovered\n                    : total.recovered}\n                </span>\n              </Grid>\n              <Grid item xs={12} md={4} lg={4}>\n                <span\n                  style={{ color: \"red\", fontWeight: \"bold\", fontSize: \"30px\" }}\n                >\n                  {\" \"}\n                  Deaths:{\" \"}\n                  {countryTotal && countryTotal.stats\n                    ? countryTotal.stats.deaths\n                    : total.deaths}\n                </span>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Divider />\n\n          <Grid item xs={12} md={8} lg={8} style={{ minHeight: 300}}>\n            <ReactMapGL\n              {...viewport}\n              maxZoom={20}\n              mapboxApiAccessToken=\"pk.eyJ1Ijoicml0dXJhanJhdGFuIiwiYSI6ImNrN3pyYjZzdTA0OXUzZW56azN0aDZ5b3gifQ.pxApFwi3KrDLgYPgsuOQ2g\"\n              onViewportChange={newViewport => {\n                setViewport({ ...newViewport });\n              }}\n              ref={mapRef}\n            >\n              {clusters.map(cluster => {\n                const [longitude, latitude] = cluster.geometry.coordinates;\n                const {\n                  cluster: isCluster,\n                  point_count: pointCount\n                } = cluster.properties;\n\n                if (isCluster) {\n                  return (\n                    <Marker\n                      key={`cluster-${cluster.id}`}\n                      latitude={latitude}\n                      longitude={longitude}\n                    >\n                      <div\n                        className=\"cluster-marker\"\n                        style={{\n                          width: `${10 + (pointCount / points.length) * 20}px`,\n                          height: `${10 + (pointCount / points.length) * 20}px`\n                        }}\n                        onClick={() => {\n                          const expansionZoom = Math.min(\n                            supercluster.getClusterExpansionZoom(cluster.id),\n                            20\n                          );\n\n                          setViewport({\n                            ...viewport,\n                            latitude,\n                            longitude,\n                            zoom: expansionZoom,\n                            transitionInterpolator: new FlyToInterpolator({\n                              speed: 2\n                            }),\n                            transitionDuration: \"auto\"\n                          });\n                        }}\n                      >\n                        {pointCount}\n                      </div>\n                    </Marker>\n                  );\n                }\n\n                return (\n                  <Marker\n                    key={`crime-${latitude}`}\n                    latitude={latitude}\n                    longitude={longitude}\n                  >\n                    <button\n                      className=\"crime-marker\"\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() => markerClick(cluster.properties)}\n                    >\n                      <img src={corona} alt=\":( Go corona Go :(\" />\n                    </button>\n                  </Marker>\n                );\n              })}\n            </ReactMapGL>\n          </Grid>\n          <Grid item xs={12} md={4} lg={4}>\n            <Paper style={{ height: 300 }}>\n              <CountryDetail detail={historicalData} />\n            </Paper>\n            <br />\n            <Paper style={{ height: 300 }}>\n              <CountryTimeline detail={historicalData} />\n            </Paper>\n          </Grid>\n        </Grid>\n      )}\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  Container,\n  Tabs,\n  Tab,\n  Typography,\n  Box,\n  makeStyles,\n  useTheme\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 500\n  }\n}));\nexport default function CoronaVirus() {\n  return (\n    <div>\n      <h1>Corona Virus</h1>\n      <div>\n        <h2>Overview</h2>\n        <p>\n          Coronavirus disease (COVID-19) is an infectious disease caused by a\n          newly discovered coronavirus.\n        </p>\n\n        <p>\n          Most people infected with the COVID-19 virus will experience mild to\n          moderate respiratory illness and recover without requiring special\n          treatment. Older people, and those with underlying medical problems\n          like cardiovascular disease, diabetes, chronic respiratory disease,\n          and cancer are more likely to develop serious illness.\n        </p>\n\n        <p>\n          The best way to prevent and slow down transmission is be well informed\n          about the COVID-19 virus, the disease it causes and how it spreads.\n          Protect yourself and others from infection by washing your hands or\n          using an alcohol based rub frequently and not touching your face.\n        </p>\n\n        <p>\n          The COVID-19 virus spreads primarily through droplets of saliva or\n          discharge from the nose when an infected person coughs or sneezes, so\n          it’s important that you also practice respiratory etiquette (for\n          example, by coughing into a flexed elbow).\n        </p>\n\n        <p>\n          At this time, there are no specific vaccines or treatments for\n          COVID-19. However, there are many ongoing clinical trials evaluating\n          potential treatments. WHO will continue to provide updated information\n          as soon as clinical findings become available.\n        </p>\n      </div>\n      <div>\n        <h2>Prevention</h2>\n\n        <p>\n          To prevent infection and to slow transmission of COVID-19, do the\n          following:\n        </p>\n        <ul>\n          <li>\n            Wash your hands regularly with soap and water, or clean them with\n            alcohol-based hand rub.\n          </li>\n          <li>\n            Maintain at least 1 metre distance between you and people coughing\n            or sneezing.\n          </li>\n          <li>Cover your mouth and nose when coughing or sneezing.</li>\n          <li>Avoid touching your face.</li>\n          <li>Stay home if you feel unwell.</li>\n          <li>\n            Refrain from smoking and other activities that weaken the lungs.\n          </li>\n          <li>\n            Practice physical distancing by avoiding unnecessary travel and\n            staying away from large groups of people.\n          </li>\n        </ul>\n      </div>\n      <div>\n        <h2>Symptoms</h2>\n        <p>\n          The COVID-19 virus affects different people in different ways.\n          COVID-19 is a respiratory disease and most infected people will\n          develop mild to moderate symptoms and recover without requiring\n          special treatment. People who have underlying medical conditions and\n          those over 60 years old have a higher risk of developing severe\n          disease and death.\n        </p>\n\n        <h3>Common symptoms include:</h3>\n        <ul>\n          <li>fever</li>\n          <li>tiredness</li>\n          <li>dry cough.</li>\n        </ul>\n\n        <h3>Other symptoms include:</h3>\n        <ul>\n          <li>shortness of breath</li>\n          <li>aches and pains</li>\n          <li>sore throat</li>\n          <li>\n            and very few people will report diarrhoea, nausea or a runny nose.\n          </li>\n        </ul>\n        <p>\n          People with mild symptoms who are otherwise healthy should\n          self-isolate and contact their medical provider or a COVID-19\n          information line for advice on testing and referral.\n        </p>\n\n        <p>\n          People with fever, cough or difficulty breathing should call their\n          doctor and seek medical attention.\n        </p>\n      </div>\n      <p><b><i>****content taken form <a href=\"https://www.who.int/health-topics/coronavirus#tab=tab_3\">https://www.who.int/health-topics/coronavirus#tab=tab_3</a></i></b></p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Link from \"@material-ui/core/Link\";\nimport Chart from \"./components/Chart\";\nimport Deposits from \"./components/Deposits\";\nimport Orders from \"./components/Orders\";\nimport Footer from \"./components/includes/footer\";\nimport Location from \"./components/location\";\nimport { Tabs, Tab, Toolbar, IconButton } from \"@material-ui/core\";\nimport HistoricalNew from \"./components/historicalNew\";\nimport corona from \"./components/corona.png\";\nimport CoronaVirus from \"./components/coronaVirus\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n     Created Using https://corona.lmao.ninja and https://covid19.mathdro.id. \n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  title: {\n    flexGrow: 1\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\"\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\"\n  },\n  fixedHeight: {\n    height: 500\n  },\n  historical: {\n    // height: 700\n  },\n  chartHeight: {\n    height: 220\n  },\n  historicalHeight: {\n    // height: 680\n  }\n}));\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`\n  };\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  return (\n     <>{value === index && <Container maxWidth={false}>{children}</Container>}</>\n  );\n}\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <img src={corona} alt=\"go corona go\" style={{ width: \"50px\" }} />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            CORONA\n          </Typography>\n\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            aria-label=\"simple tabs example\"\n          >\n            <Tab label=\"Dashboard\" {...a11yProps(0)} />\n            <Tab label=\"Reports\" {...a11yProps(1)} />\n            <Tab label=\"Coronavirus\" {...a11yProps(2)} />\n          </Tabs>\n        </Toolbar>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container className={classes.container}>\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={12} lg={12}>\n                <Paper className={classes.historicalHeight}>\n                  <HistoricalNew className={classes.historical} />\n                </Paper>\n              </Grid>\n            </Grid>\n            <Box pt={4}>\n              <Copyright />\n            </Box>\n          </Container>\n        </main>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container className={classes.container}>\n            <Grid container spacing={3}>\n              {/* Chart */}\n              <Grid item xs={12} md={8} lg={9}>\n                <Paper className={fixedHeightPaper}>\n                  <Chart />\n                </Paper>\n              </Grid>\n              {/* Recent Deposits */}\n              <Grid item xs={12} md={4} lg={3}>\n                <Paper className={fixedHeightPaper}>\n                  <Deposits />\n                </Paper>\n              </Grid>\n              {/* Recent Orders */}\n              <Grid item xs={12}>\n                <Paper className={classes.paper}>{<Orders />}</Paper>\n              </Grid>\n            </Grid>\n            <Box pt={4}>\n              <Copyright />\n            </Box>\n          </Container>\n        </main>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n      <CoronaVirus />\n      </TabPanel>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/corona.43055c39.png\";"],"sourceRoot":""}