{"version":3,"sources":["components/Title.js","config/config.js","components/Chart.js","components/Deposits.js","components/Orders.js","components/includes/footer.js","components/location.js","components/CountryTimeline.js","components/countryDetail.js","components/historicalNew.js","App.js","serviceWorker.js","index.js","components/corona.png"],"names":["Title","props","Typography","component","variant","color","gutterBottom","children","API","Chart","useTheme","useState","loading","setLoading","detail","setDetail","useEffect","fetch","then","response","json","data","map","d","reportDateString","moment","format","CircularProgress","Fragment","margin","top","right","bottom","left","strokeDasharray","dataKey","angle","textAnchor","tick","fontSize","tickCount","type","stackId","stroke","fill","useStyles","makeStyles","depositContext","flex","Deposits","classes","style","fontWeight","cases","recovered","deaths","className","updated","theme","seeMore","marginTop","spacing","Orders","title","columns","field","cellStyle","pageSize","options","rowsPerPage","search","headerStyle","backgroundColor","root","width","formControl","minWidth","selectEmpty","container","maxHeight","CountryTimeline","console","log","timeline","Object","keys","forEach","key","push","date","length","tickSize","src","corona","alt","marginBottom","CountryDetail","TableContainer","Table","stickyHeader","size","aria-label","TableHead","TableRow","TableCell","align","TableBody","reverse","index","colspan","fetcher","HistoricalNew","countryTotal","setCountryTotal","total","setTotal","historical","setHistorical","historicalData","setHistoricalData","latitude","longitude","height","zoom","viewport","setViewport","url","useSwr","error","countries","points","country","properties","cluster","province","updatedAt","stats","geometry","coordinates","parseFloat","mapRef","useRef","bounds","current","getMap","getBounds","toArray","flat","useSupercluster","radius","maxZoom","clusters","supercluster","Grid","item","xs","md","lg","textAlign","Divider","confirmed","minHeight","mapboxApiAccessToken","onViewportChange","newViewport","ref","isCluster","pointCount","point_count","id","onClick","expansionZoom","Math","min","getClusterExpansionZoom","transitionInterpolator","FlyToInterpolator","speed","transitionDuration","cursor","filterResult","filter","filterCountry","markerClick","Paper","Copyright","Date","getFullYear","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","flexGrow","appBarSpacer","mixins","toolbar","content","overflow","paddingTop","paddingBottom","paper","padding","flexDirection","fixedHeight","chartHeight","historicalHeight","a11yProps","TabPanel","value","Container","maxWidth","Boolean","window","location","hostname","match","ReactDOM","render","React","setValue","fixedHeightPaper","clsx","CssBaseline","AppBar","position","Toolbar","IconButton","edge","menuButton","Tabs","onChange","event","newValue","Tab","label","Box","pt","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.8eb1156e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","export const API = {\n  total: \"https://corona.lmao.ninja/all\",\n  confirmed: \"https://covid19.mathdro.id/api/confirmed\",\n  recovered: \"https://covid19.mathdro.id/api/recovered\",\n  deaths: \"https://covid19.mathdro.id/api/deaths\",\n  dailySummary: \"https://covid19.mathdro.id/api/daily\",\n  dailyTimeSeries: {\n    pattern: \"https://covid19.mathdro.id/api/daily/[dateString]\",\n    example: \"https://covid19.mathdro.id/api/daily/2-14-2020\"\n  },\n  image: \"https://covid19.mathdro.id/api/og\",\n  source: \"https://github.com/mathdroid/covid19\",\n  countries: \"https://corona.lmao.ninja/countries\",\n  countryDetail: {\n    pattern: \"https://covid19.mathdro.id/api/countries/[country]\",\n    example: \"https://covid19.mathdro.id/api/countries/USA\"\n  },\n  historical: \"https://corona.lmao.ninja/historical\",\n  map: \"https://corona.lmao.ninja/jhucsse\",\n  lastUpdate: \"2020-03-20T14:43:04.000Z\"\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer\n} from \"recharts\";\nimport Title from \"./Title\";\nimport { API } from \"../config/config\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport moment from \"moment\";\n\nexport default function Chart() {\n  const theme = useTheme();\n  const [loading, setLoading] = useState(true);\n  const [detail, setDetail] = useState([]);\n\n  useEffect(() => {\n    if (loading) {\n      fetch(API.dailySummary)\n        .then(response => response.json())\n        .then(data => {\n          data.map(d => d.reportDateString = moment(d.reportDateString).format('DD-MMM-YYYY'));\n          setDetail(data);\n          setLoading(false);\n        });\n    }\n  }, [loading]);\n  return (\n    <>\n      {loading && <CircularProgress />}\n      {detail && (\n        <React.Fragment>\n          <Title>Corona Journey Day By Day</Title>\n          <ResponsiveContainer>\n            <AreaChart\n              data={detail}\n              margin={{\n                top: 16,\n                right: 16,\n                bottom: 35,\n                left: 24\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"reportDateString\" angle={-43} textAnchor=\"end\" tick={{ fontSize: 10 }} tickCount={20}/>\n              <YAxis />\n              <Tooltip />\n              <Area\n                type=\"monotone\"\n                dataKey=\"deltaConfirmed\"\n                stackId=\"1\"\n                stroke=\"#ffc658\"\n                fill=\"#ffc658\"\n              />\n              <Area\n                type=\"monotone\"\n                dataKey=\"totalRecovered\"\n                stackId=\"1\"\n                stroke=\"#82ca9d\"\n                fill=\"#82ca9d\"\n              />\n               <Area\n                type=\"monotone\"\n                dataKey=\"totalConfirmed\"\n                stackId=\"1\"\n                stroke=\"#f44336\"\n                fill=\"#f44336\"\n              />\n            </AreaChart>\n          </ResponsiveContainer>\n        </React.Fragment>\n      )}\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n// import Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { API } from \"../config/config\";\nimport Moment from \"react-moment\";\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1\n  }\n});\n\nexport default function Deposits() {\n  const [loading, setLoading] = useState(true);\n  const [detail, setDetail] = useState(null);\n\n  useEffect(() => {\n    if (loading) {\n      fetch(API.total)\n        .then(response => response.json())\n        .then(data => {\n          setDetail(data);\n          setLoading(false);\n        });\n    }\n  }, [loading]);\n  const classes = useStyles();\n  return (\n    <>\n      {loading && <CircularProgress />}\n      {detail && (\n        <React.Fragment>\n          <Typography variant=\"h4\" style={{color: \"orange\"}} component=\"h4\">\n            Confirmed\n          </Typography>\n          <Typography component=\"h3\" style={{color: \"orange\", fontWeight:\"bold\"}} variant=\"h2\">\n            {detail.cases}\n          </Typography>\n          <hr/>\n          <Typography variant=\"h4\" style={{color: \"green\"}} component=\"h4\">\n            Recovered\n          </Typography>\n          <Typography component=\"p\" style={{color: \"green\", fontWeight:\"bold\"}} variant=\"h2\">\n            {detail.recovered}\n          </Typography>\n          <hr/>\n          <Typography variant=\"h4\" color=\"error\"  component=\"h4\">\n            Deaths\n          </Typography>\n          <Typography component=\"p\"  color=\"error\"  style={{fontWeight:\"bold\"}}  variant=\"h2\">\n            {detail.deaths}\n          </Typography>\n          <hr/>\n          <Typography color=\"textSecondary\" variant=\"h6\"  className={classes.depositContext}>\n            Till <Moment format=\"DD-MMM-YYYY\">{detail.updated}</Moment> \n          </Typography>\n          <div></div>\n        </React.Fragment>\n      )}\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Title from \"./Title\";\nimport { API } from \"../config/config\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport MaterialTable from \"material-table\";\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles(theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport default function Orders() {\n  const [loading, setLoading] = useState(true);\n  const [detail, setDetail] = useState(null);\n\n  useEffect(() => {\n    if (loading) {\n      fetch(API.countries)\n        .then(response => response.json())\n        .then(data => {\n          setDetail(data);\n          setLoading(false);\n        });\n    }\n  }, [loading]);\n  const classes = useStyles();\n  return (\n    <>\n      {loading && <CircularProgress />}\n      {detail && (\n        <React.Fragment>\n          <MaterialTable\n            title=\"Corona Status\"\n            columns={[\n              { title: \"Country\", field: \"country\" },\n              { title: \"Cases\", field: \"cases\" },\n              { title: \"TodayCases\", field: \"todayCases\" },\n              { title: \"Deaths\", field: \"deaths\",  cellStyle: {\n                color: 'red'\n              }, },\n              { title: \"Recovered\", field: \"recovered\" , cellStyle: {\n                color: 'green'\n              },},\n              { title: \"Active\", field: \"active\" },\n              { title: \"Critical\", field: \"critical\", cellStyle: {\n                color: 'orange'\n              }, },\n              // { title: \"CasesPerOneMillion\", field: \"casesPerOneMillion\" }\n            ]}\n            data={detail}\n            pageSize={10}\n            options={{\n              rowsPerPage: 10,\n              search: true,\n              headerStyle: {\n                backgroundColor: '#3f51b5',\n                color: '#FFF'\n              }\n            }}\n          ></MaterialTable>\n        </React.Fragment>\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 500,\n  },\n});\n\nexport default function Footer() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  return (\n    <BottomNavigation\n      value={value}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n      }}\n      showLabels\n      className={classes.root}\n    >\n      <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\n      <BottomNavigationAction label=\"Favorites\" icon={<FavoriteIcon />} />\n      <BottomNavigationAction label=\"Location\" icon={<LocationOnIcon />} />\n    </BottomNavigation>\n  );\n}","import React, { useEffect, useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport { API } from \"../config/config\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nexport default function Location() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [loading, setLoading] = useState(true);\n  const [detail, setDetail] = useState([]);\n\n  useEffect(() => {\n    if (loading) {\n      fetch(API.historical)\n        .then(response => response.json())\n        .then(data => {\n          setDetail(data);\n          setLoading(false);\n        });\n    }\n  }, [loading]);\n  const [state, setState] = React.useState({\n    age: \"\",\n    name: \"hai\"\n  });\n\n  const handleChange = name => event => {\n    setState({\n      ...state,\n      [name]: event.target.value\n    });\n  };\n\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"age-native-simple\">Locations</InputLabel>\n        <Select\n          native\n          value={state.age}\n          onChange={handleChange(\"age\")}\n          inputProps={{\n            name: \"age\",\n            id: \"age-native-simple\"\n          }}\n        >\n          {detail &&\n            detail.map((data, index) => {\n              return index && <option value={index}>{data.country} {data.province || ''}</option>;\n            })}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer\n} from \"recharts\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport moment from \"moment\";\nimport corona from \"./corona.png\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  },\n  container: {\n    maxHeight: 400\n  }\n});\nexport default function CountryTimeline(props) {\n  const { detail } = { ...props };\n  const classes = useStyles();\n  let data = [];\n  console.log(detail);\n  if (detail && detail.timeline) {\n    Object.keys(detail.timeline.cases).forEach(key => {\n      data.push({\n        date: moment(key).format(\"DD-MMM-YY\"),\n        cases: +detail.timeline.cases[key],\n        deaths: +detail.timeline.deaths[key],\n        recovered: +detail.timeline.recovered[key]\n      });\n    });\n  }\n  return (\n    <>\n      {data.length !== 0 && (\n        <ResponsiveContainer>\n          <LineChart\n            data={data}\n            margin={{\n              top: 16,\n              right: 16,\n              bottom: 35,\n              left: 24\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"date\" angle={-45} textAnchor=\"end\" tickSize={1} />\n            <YAxis />\n            <Tooltip />\n            <Line\n              type=\"monotone\"\n              dataKey=\"deaths\"\n              stackId=\"1\"\n              stroke=\"#f44336\"\n              fill=\"#f44336\"\n            />\n            <Line\n              type=\"monotone\"\n              dataKey=\"recovered\"\n              stackId=\"1\"\n              stroke=\"#82ca9d\"\n              fill=\"#82ca9d\"\n            />\n            <Line\n              type=\"monotone\"\n              dataKey=\"cases\"\n              stackId=\"1\"\n              stroke=\"#ffc658\"\n              fill=\"#ffc658\"\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      )}\n      {!data.length && (\n        <span style={{ fontSize: \"large\", color: \"orange\" }}>\n          Click on any\n          <img\n            src={corona}\n            alt=\":( Go corona Go :(\"\n            style={{ width: \"46px\", marginBottom: \"-11px\" }}\n          />{\" \"}\n          icon in map to get country data\n        </span>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { TableContainer } from \"@material-ui/core\";\nimport Moment from \"react-moment\";\nimport Title from \"./Title\";\nimport corona from \"./corona.png\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  },\n  container: {\n    maxHeight: 250\n  }\n});\n\nexport default function CountryDetail(props) {\n  const { detail } = { ...props };\n  const classes = useStyles();\n  return (\n    <>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader size=\"small\" aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"left\">Date</TableCell>\n              <TableCell align=\"left\">Cases</TableCell>\n              <TableCell align=\"left\">Deaths</TableCell>\n              <TableCell align=\"left\">Recovered</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {detail &&\n              detail.timeline &&\n              Object.keys(detail.timeline.cases)\n                .reverse()\n                .map((key, index) => {\n                  return (\n                    <TableRow key={index}>\n                      <TableCell style={{ width: 150 }}>\n                        <Moment format=\"DD MMM YYYY\">{key}</Moment>\n                      </TableCell>\n                      <TableCell style={{ fontSize: \"large\", color: \"orange\" }}>\n                        {detail.timeline.cases[key]}\n                      </TableCell>\n                      <TableCell style={{ fontSize: \"large\", color: \"red\" }}>\n                        {detail.timeline.deaths[key]}\n                      </TableCell>\n                      <TableCell style={{ fontSize: \"large\", color: \"green\" }}>\n                        {detail.timeline.recovered[key]}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n            {!(detail && detail.timeline) && (\n              <TableRow>\n                <TableCell style={{ fontSize: \"large\", color: \"orange\" }} colspan=\"4\">\n                  <span>\n                    Click on any\n                    <img\n                      src={corona}\n                      alt=\":( Go corona Go :(\"\n                      style={{ width: \"46px\", marginBottom: \"-11px\" }}\n                    /> icon in map\n                    to get country data\n                  </span>\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","import React, { useRef, useState, useEffect } from \"react\";\nimport ReactMapGL, { Marker, FlyToInterpolator } from \"react-map-gl\";\nimport useSwr from \"swr\";\nimport { API } from \"../config/config\";\nimport useSupercluster from \"use-supercluster\";\nimport {\n  Grid,\n  Paper,\n  makeStyles,\n  Divider,\n  Typography,\n  Chip,\n  CircularProgress\n} from \"@material-ui/core\";\nimport CountryTimeline from \"./CountryTimeline\";\nimport CountryDetail from \"./countryDetail\";\nimport \"./history.css\";\nimport corona from \"./corona.png\";\nimport Title from \"./Title\";\n\nconst fetcher = (...args) => fetch(...args).then(response => response.json());\n\nexport default function HistoricalNew() {\n  const [loading, setLoading] = useState(true);\n  const [countryTotal, setCountryTotal] = useState(null);\n  const [total, setTotal] = useState({\n    cases: \"\",\n    deaths: \"\",\n    recovered: \"\"\n  });\n  const [historical, setHistorical] = useState([]);\n  const [historicalData, setHistoricalData] = useState([null]);\n  const [viewport, setViewport] = useState({\n    latitude: 21,\n    longitude: 78,\n    width: \"100%\",\n    height: \"100%\",\n    zoom: 3\n  });\n  const url = API.map;\n  const { data, error } = useSwr(url, { fetcher });\n  const countries = data && !error ? data : [];\n  const points = countries.map(country => ({\n    type: \"Feature\",\n    properties: {\n      cluster: false,\n      province: country.province,\n      country: country.country,\n      updatedAt: country.updatedAt,\n      stats: country.stats\n    },\n    geometry: {\n      type: \"Point\",\n      coordinates: [\n        parseFloat(country.coordinates.longitude),\n        parseFloat(country.coordinates.latitude)\n      ]\n    }\n  }));\n  const mapRef = useRef();\n  useEffect(() => {\n    if (loading) {\n      fetch(API.historical)\n        .then(response => response.json())\n        .then(historical => {\n          setHistorical(historical);\n          setLoading(false);\n        });\n\n      fetch(API.total)\n        .then(response => response.json())\n        .then(data => {\n          setTotal(data);\n        });\n    }\n  }, [loading]);\n\n  const markerClick = country => {\n    console.log(country);\n    console.log(historical);\n    const filterResult = historical.filter(\n      response =>\n        response.country === country.country &&\n        response.province === country.province\n    );\n    const filterCountry = countries.filter(\n      response =>\n        response.country === country.country &&\n        response.province === country.province\n    );\n    setCountryTotal(filterCountry.length ? filterCountry[0] : null);\n    setHistoricalData(filterResult.length ? filterResult[0] : null);\n  };\n\n  const bounds = mapRef.current\n    ? mapRef.current\n        .getMap()\n        .getBounds()\n        .toArray()\n        .flat()\n    : null;\n\n  const { clusters, supercluster } = useSupercluster({\n    points,\n    bounds,\n    zoom: viewport.zoom,\n    options: { radius: 75, maxZoom: 20 }\n  });\n\n  return (\n    <>\n      {loading && <CircularProgress />}\n      {!loading && (\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={12} lg={12}>\n            <h1 style={{ fontSize: \"30px\", textAlign: \"center\", color: '#b51f1f' }}>\n              <span>\n                <img\n                  src={corona}\n                  alt=\":( Go corona Go :(\"\n                  style={{ width: \"46px\", marginBottom: '-11px' }}\n                />\n              </span>\n              {historicalData && historicalData.country && (\n                <span>\n                  Corona Day By Day in {historicalData.country}{\" \"}\n                  {historicalData.province || \"\"}\n                </span>\n              )}\n              {!(historicalData && historicalData.country) && (\n                <span>Corona All Over World</span> \n              )}\n            </h1>\n            <Divider />\n            <Grid container spacing={1}>\n              <Grid item xs={12} md={4} lg={4}>\n                <span\n                  style={{\n                    color: \"orange\",\n                    fontWeight: \"bold\",\n                    fontSize: \"30px\"\n                  }}\n                >\n                  {\" \"}\n                  Cases:{\" \"}\n                  {countryTotal && countryTotal.stats\n                    ? countryTotal.stats.confirmed\n                    : total.cases}\n                </span>\n              </Grid>\n              <Grid item xs={12} md={4} lg={4}>\n                <span\n                  style={{\n                    color: \"green\",\n                    fontWeight: \"bold\",\n                    fontSize: \"30px\"\n                  }}\n                >\n                  {\" \"}\n                  Recovered:{\" \"}\n                  {countryTotal && countryTotal.stats\n                    ? countryTotal.stats.recovered\n                    : total.recovered}\n                </span>\n              </Grid>\n              <Grid item xs={12} md={4} lg={4}>\n                <span\n                  style={{ color: \"red\", fontWeight: \"bold\", fontSize: \"30px\" }}\n                >\n                  {\" \"}\n                  Deaths:{\" \"}\n                  {countryTotal && countryTotal.stats\n                    ? countryTotal.stats.deaths\n                    : total.deaths}\n                </span>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Divider />\n\n          <Grid item xs={12} md={8} lg={8} style={{ minHeight: 300}}>\n            <ReactMapGL\n              {...viewport}\n              maxZoom={20}\n              mapboxApiAccessToken=\"pk.eyJ1Ijoicml0dXJhanJhdGFuIiwiYSI6ImNrN3pyYjZzdTA0OXUzZW56azN0aDZ5b3gifQ.pxApFwi3KrDLgYPgsuOQ2g\"\n              onViewportChange={newViewport => {\n                setViewport({ ...newViewport });\n              }}\n              ref={mapRef}\n            >\n              {clusters.map(cluster => {\n                const [longitude, latitude] = cluster.geometry.coordinates;\n                const {\n                  cluster: isCluster,\n                  point_count: pointCount\n                } = cluster.properties;\n\n                if (isCluster) {\n                  return (\n                    <Marker\n                      key={`cluster-${cluster.id}`}\n                      latitude={latitude}\n                      longitude={longitude}\n                    >\n                      <div\n                        className=\"cluster-marker\"\n                        style={{\n                          width: `${10 + (pointCount / points.length) * 20}px`,\n                          height: `${10 + (pointCount / points.length) * 20}px`\n                        }}\n                        onClick={() => {\n                          const expansionZoom = Math.min(\n                            supercluster.getClusterExpansionZoom(cluster.id),\n                            20\n                          );\n\n                          setViewport({\n                            ...viewport,\n                            latitude,\n                            longitude,\n                            zoom: expansionZoom,\n                            transitionInterpolator: new FlyToInterpolator({\n                              speed: 2\n                            }),\n                            transitionDuration: \"auto\"\n                          });\n                        }}\n                      >\n                        {pointCount}\n                      </div>\n                    </Marker>\n                  );\n                }\n\n                return (\n                  <Marker\n                    key={`crime-${latitude}`}\n                    latitude={latitude}\n                    longitude={longitude}\n                  >\n                    <button\n                      className=\"crime-marker\"\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() => markerClick(cluster.properties)}\n                    >\n                      <img src={corona} alt=\":( Go corona Go :(\" />\n                    </button>\n                  </Marker>\n                );\n              })}\n            </ReactMapGL>\n          </Grid>\n          <Grid item xs={12} md={4} lg={4}>\n            <Paper style={{ height: 300 }}>\n              <CountryDetail detail={historicalData} />\n            </Paper>\n            <br />\n            <Paper style={{ height: 300 }}>\n              <CountryTimeline detail={historicalData} />\n            </Paper>\n          </Grid>\n        </Grid>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Link from \"@material-ui/core/Link\";\nimport Chart from \"./components/Chart\";\nimport Deposits from \"./components/Deposits\";\nimport Orders from \"./components/Orders\";\nimport Footer from \"./components/includes/footer\";\nimport Location from \"./components/location\";\nimport { Tabs, Tab, Toolbar, IconButton } from \"@material-ui/core\";\nimport HistoricalNew from \"./components/historicalNew\";\nimport corona from \"./components/corona.png\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n     Created Using https://corona.lmao.ninja and https://covid19.mathdro.id. \n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  title: {\n    flexGrow: 1\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\"\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\"\n  },\n  fixedHeight: {\n    height: 500\n  },\n  historical: {\n    // height: 700\n  },\n  chartHeight: {\n    height: 220\n  },\n  historicalHeight: {\n    // height: 680\n  }\n}));\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`\n  };\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  return (\n     <>{value === index && <Container maxWidth={false}>{children}</Container>}</>\n  );\n}\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <img src={corona} alt=\"go corona go\" style={{ width: \"50px\" }} />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            CORONA\n          </Typography>\n\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            aria-label=\"simple tabs example\"\n          >\n            <Tab label=\"Dashboard\" {...a11yProps(0)} />\n            <Tab label=\"Reports\" {...a11yProps(1)} />\n          </Tabs>\n        </Toolbar>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container className={classes.container}>\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={12} lg={12}>\n                <Paper className={classes.historicalHeight}>\n                  <HistoricalNew className={classes.historical} />\n                </Paper>\n              </Grid>\n            </Grid>\n            <Box pt={4}>\n              <Copyright />\n            </Box>\n          </Container>\n        </main>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container className={classes.container}>\n            <Grid container spacing={3}>\n              {/* Chart */}\n              <Grid item xs={12} md={8} lg={9}>\n                <Paper className={fixedHeightPaper}>\n                  <Chart />\n                </Paper>\n              </Grid>\n              {/* Recent Deposits */}\n              <Grid item xs={12} md={4} lg={3}>\n                <Paper className={fixedHeightPaper}>\n                  <Deposits />\n                </Paper>\n              </Grid>\n              {/* Recent Orders */}\n              <Grid item xs={12}>\n                <Paper className={classes.paper}>{<Orders />}</Paper>\n              </Grid>\n            </Grid>\n            <Box pt={4}>\n              <Copyright />\n            </Box>\n          </Container>\n        </main>\n      </TabPanel>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/corona.43055c39.png\";"],"sourceRoot":""}